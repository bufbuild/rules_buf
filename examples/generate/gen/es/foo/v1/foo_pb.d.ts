// Copyright 2021-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.4.2
// @generated from file foo/v1/foo.proto (package foo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Pet } from "../../pet/v1/pet_pb.js";

/**
 * @generated from message foo.v1.Foo
 */
export declare class Foo extends Message<Foo> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: pet.v1.Pet pet = 3;
   */
  pet?: Pet;

  constructor(data?: PartialMessage<Foo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "foo.v1.Foo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Foo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Foo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Foo;

  static equals(a: Foo | PlainMessage<Foo> | undefined, b: Foo | PlainMessage<Foo> | undefined): boolean;
}

